{"version":3,"file":"mcanvas.min.js","sources":["../src/index.js","../src/utils.js"],"sourcesContent":["import _ from './utils';\n\nexport default function MCanvas(options){\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MCanvas))return new MCanvas(options);\n\n    // 配置canvas初始大小；\n    // width：画布宽度，Number,选填，默认为 500;\n    // height: 画布高度，Number，选填，默认与宽度一致；\n    this.ops = _.extend({\n        width: 500,\n        height: 500,\n        backgroundColor : '',\n    }, options);\n\n    // 全局画布；\n    this.canvas = null;\n    this.ctx = null;\n    // 绘制函数队列；\n    this.queue = [];\n    // 回调函数池；\n    this.fn = {\n        // 最后执行的函数；\n        success(){},\n        // 错误回调；\n        error(){},\n    };\n    this.data = {\n        // 文字绘制数据；\n        text : {},\n        // 背景图数据;\n        bgConfig : null,\n    };\n\n    // 初始化创建画布；\n    this._init();\n}\n\nMCanvas.prototype._init = function(){\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.ops.width;\n    this.canvas.height = this.ops.height;\n    this.ctx = this.canvas.getContext('2d');\n\n    this.ops.backgroundColor && this.setBgColor(this.ops.backgroundColor);\n};\n\n// --------------------------------------------------------\n// 绘制背景部分；\n// --------------------------------------------------------\n\nMCanvas.prototype.background = function(image, bg = {\n    type : 'origin',\n}){\n    if(!image && !this.data.bgConfig){\n        console.error('mcanvas error : the init background must has a image.');\n        return;\n    }\n\n    // 缓存bg options， 用于重置；\n    if(!image){\n        bg = this.data.bgConfig;\n    }else{\n        bg.image = image;\n        this.data.bgConfig = bg;\n    }\n\n    this.queue.push(() => {\n        if(bg.color)this.setBgColor(bg.color);\n        _.getImage(bg.image, img =>{\n            this._background(img, bg);\n        },this.fn.error);\n    });\n    return this;\n};\n\n// 设置画布颜色;\nMCanvas.prototype.setBgColor = function(color){\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);\n};\n\nMCanvas.prototype._getBgAlign = function(left,iw,cw,cropScale){\n    let rv;\n    if(typeof left == 'string'){\n        if(left == '50%' || left == 'center'){\n            rv = Math.abs((iw - cw / cropScale) / 2);\n        }else if(left == '100%'){\n            rv = Math.abs(iw - cw / cropScale);\n        }else if(left == '0%'){\n            rv = 0;\n        }\n    }else if(typeof left == 'number'){\n        rv = left;\n    }else{\n        rv = 0;\n    }\n    return rv;\n};\nMCanvas.prototype._background = function(img, bg){\n    let { iw, ih } = this._getSize(img);\n    // 图片与canvas的长宽比；\n    let iRatio = iw / ih;\n    let cRatio = this.canvas.width / this.canvas.height;\n    // 背景绘制参数；\n    let sx,sy,swidth,sheight,dx,dy,dwidth,dheight;\n    let cropScale;\n    switch (bg.type) {\n        // 裁剪模式，固定canvas大小，原图铺满，超出的部分裁剪；\n        case 'crop':\n            if(iRatio > cRatio){\n                swidth = ih * cRatio;\n                sheight = ih;\n                cropScale = this.canvas.height / ih;\n            }else{\n                swidth = iw;\n                sheight = swidth / cRatio;\n                cropScale = this.canvas.width / iw;\n            }\n\n            sx = this._getBgAlign(bg.left,iw, this.canvas.width,cropScale);\n            sy = this._getBgAlign(bg.top,ih,this.canvas.height,cropScale);\n\n            dy = dx = 0;\n            dheight = this.canvas.height;\n            dwidth = this.canvas.width;\n            break;\n        // 包含模式，固定canvas大小，包含背景图；\n        case 'contain':\n            sy = sx = 0;\n            swidth = iw;\n            sheight = ih;\n            if(iRatio > cRatio){\n                dwidth = this.canvas.width;\n                dheight = dwidth / iRatio;\n                dx = bg.left || 0;\n                dy = (bg.top || bg.top == 0) ? bg.top : (this.canvas.height - dheight)/2;\n            }else{\n                dheight = this.canvas.height;\n                dwidth = dheight * iRatio;\n                dy = bg.top || 0;\n                dx = (bg.left || bg.left == 0) ? bg.left : (this.canvas.width - dwidth)/2;\n            }\n            break;\n        // 原图模式：canvas与原图大小一致，忽略初始化 传入的宽高参数；\n        // 同时，background 传入的 left/top 均被忽略；\n        case 'origin':\n            this.canvas.width = iw;\n            this.canvas.height = ih;\n            sx = sy = 0;\n            swidth = iw;\n            sheight = ih;\n            dx = dy = 0;\n            dwidth = this.canvas.width;\n            dheight = this.canvas.height;\n            break;\n        default:\n            console.error('mcanvas error:background type error!');\n    }\n    this.ctx.drawImage(img,sx,sy,swidth,sheight,dx,dy,dwidth,dheight);\n    this._next();\n};\n// --------------------------------------------------------\n// 绘制图层部分；\n// --------------------------------------------------------\n\n// 绘制矩形层；\nMCanvas.prototype.rect = function(ops){\n    this.queue.push(() => {\n        let { fillColor = '#fff', strokeColor = fillColor, strokeWidth = 0} = ops;\n        let cw = this.canvas.width , ch = this.canvas.height;\n        let width = this._get(cw, 0, ops.width || 0, 'pos') - 2 * strokeWidth,\n            height = this._get(ch, 0, ops.height || 0, 'pos') - 2 * strokeWidth;\n        let x = this._get(cw, width, ops.x || 0 ,'pos') + strokeWidth / 2,\n            y = this._get(ch, height, ops.y || 0 ,'pos') + strokeWidth / 2;\n        this.ctx.lineWidth = strokeWidth;\n        this.ctx.fillStyle = fillColor;\n        this.ctx.strokeStyle = strokeColor;\n\n        this.ctx.beginPath();\n        this.ctx.strokeRect(x, y, width, height);\n        this.ctx.fillRect(x, y, width, height);\n        this.ctx.closePath();\n\n        this._next();\n    });\n    return this;\n};\n\n// 绘制圆形层；\nMCanvas.prototype.circle = function(ops){\n    this.queue.push(() => {\n        let { fillColor = '#fff', strokeColor = fillColor, strokeWidth = 0 } = ops;\n        let cw = this.canvas.width , ch = this.canvas.height;\n        let r = this._get(cw, 0, ops.r || 0, 'pos') - 2 * strokeWidth;\n        let x = this._get(cw, 2 * r, ops.x || 0 ,'pos') + strokeWidth / 2 + r,\n            y = this._get(ch, 2 * r, ops.y || 0 ,'pos') + strokeWidth / 2 + r;\n\n        this.ctx.beginPath();\n        this.ctx.arc(x,y,r,0,Math.PI*2,false);\n        this.ctx.fillStyle = fillColor;\n        this.ctx.fill();\n        this.ctx.strokeStyle = strokeColor;\n        this.ctx.lineWidth = strokeWidth;\n        this.ctx.stroke();\n        this.ctx.closePath();\n\n        this._next();\n    });\n    return this;\n};\n\n// 绘制水印；基于 add 函数封装；\nMCanvas.prototype.watermark = function(image = '', ops){\n    if(!image){\n        console.error('mcanvas error : there is not image of watermark.');\n        return;\n    }\n    // 参数默认值；\n    let { width = '40%' , pos = 'rightbottom' , margin = 20} = ops;\n    let position = {\n        x:0,\n        y:0,\n        scale:1,\n        rotate:0,\n    };\n    switch (pos) {\n        case 'leftTop':\n            position.x = `left:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'leftBottom':\n            position.x = `left:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        case 'rightTop':\n            position.x = `right:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'rightBottom':\n            position.x = `right:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        default:\n    }\n    this.add(image,{\n        width,\n        pos:position,\n    });\n    return this;\n};\n\n// 通用绘制图层函数；\n// 使用方式：\n// 多张图: add([{image:'',options:{}},{image:'',options:{}}]);\n// 单张图: add(image,options);\nMCanvas.prototype.add = function(image = '',options){\n    // 默认参数；\n    let def = {\n        width:'100%',\n        crop:{\n            x:0,\n            y:0,\n            width:'100%',\n            height:'100%',\n        },\n        pos:{\n            x:0,\n            y:0,\n            scale:1,\n            rotate:0,\n        },\n    };\n\n    if(!_.isArr(image))image = [{image,options}];\n\n    image.forEach( v =>{\n        // 将封装好的 add函数 推入队列中待执行；\n        // 参数经过 _handleOps 加工；\n        this.queue.push(() => {\n            _.getImage(v.image, img => {\n                this._add(img,this._handleOps(_.extend(def,v.options),img));\n            },this.fn.error);\n        });\n    });\n\n    return this;\n};\n\nMCanvas.prototype._add = function(img,ops){\n    if(ops.width == 0)console.warn(`mcanvas warn: the width of mc-element is zero`);\n    let { iw, ih } = this._getSize(img);\n    // let ratio = iw / ih;\n    // 画布canvas参数；\n    let cdx,cdy,cdw,cdh;\n    // 素材canvas参数；\n    let { x:lsx, y:lsy, width:lsw, height:lsh } = ops.crop;\n\n    let cratio = lsw / lsh;\n    let ldx,ldy,ldw,ldh;\n    // 素材canvas的绘制;\n    let lcvs = document.createElement('canvas');\n    let lctx = lcvs.getContext('2d');\n    // 图片宽高比 * 1.4 是一个最安全的宽度，旋转任意角度都不会被裁剪；\n    // 没有旋转却长宽比很高大的图，会导致放大倍数太大，因此甚至了最高倍数为5；\n    // _ratio 为 较大边 / 较小边 的比例；\n    let _ratio = iw > ih ? iw / ih : ih / iw;\n    let lctxScale = _ratio * 1.4 > 5 ? 5 : _ratio * 1.4;\n    let spaceX,spaceY;\n\n    lcvs.width =  lsw * lctxScale;\n    lcvs.height = lsh * lctxScale;\n\n    // 限制canvas的大小，ios8以下为 2096, 其余平台均限制为 4096;\n    let shrink;\n    if(_.isIos8() && (lcvs.width > 2096 || lcvs.height > 2096)){\n        if(cratio > 1){\n            shrink = 2096 / lcvs.width;\n        }else{\n            shrink = 2096 / lcvs.height;\n        }\n    }else if(lcvs.width > 4096 || lcvs.height > 4096){\n        if(cratio > 1){\n            shrink = 4096 / lcvs.width;\n        }else{\n            shrink = 4096 / lcvs.height;\n        }\n    }\n\n    // 从素材canvas的中心点开始绘制；\n    ldx = - Math.round(lsw / 2);\n    ldy = - Math.round(lsh / 2);\n    ldw = lsw;\n    ldh = Math.round(lsw / cratio);\n\n    // 获取素材最终的宽高;\n    if(shrink){\n        [lcvs.width,lcvs.height,ldx,ldy,ldw,ldh] = [lcvs.width,lcvs.height,ldx,ldy,ldw,ldh].map(v => Math.round(v*shrink));\n    }\n\n    lctx.translate(lcvs.width/2,lcvs.height/2);\n    lctx.rotate(ops.pos.rotate);\n\n    lctx.drawImage(img,lsx,lsy,lsw,lsh,ldx,ldy,ldw,ldh);\n\n    // lcvs.style.width = '300px';\n    // document.querySelector('body').appendChild(lcvs);\n\n    cdw = ops.width * lctxScale;\n    cdh = cdw / cratio;\n\n    spaceX = (lctxScale - 1) * ops.width / 2;\n    spaceY = spaceX / cratio;\n\n    // 获取素材的位置；\n    //    配置的位置 - 缩放的影响 - 绘制成正方形的影响；\n    cdx = ops.pos.x + cdw * ( 1 - ops.pos.scale )/2 - spaceX;\n    cdy = ops.pos.y + cdh * ( 1 - ops.pos.scale )/2 - spaceY;\n\n    cdw *= ops.pos.scale;\n    cdh *= ops.pos.scale;\n\n    this.ctx.drawImage(lcvs,cdx,cdy,cdw,cdh);\n\n    lcvs = lctx = null;\n    this._next();\n};\n\n// 获取宽高，兼容img，canvas\nMCanvas.prototype._getSize = function(img){\n    let iw, ih;\n    if(img.tagName === 'IMG'){\n        iw = img.naturalWidth;\n        ih = img.naturalHeight;\n    }else if(img.tagName === 'CANVAS'){\n        iw = img.width;\n        ih = img.height;\n    }else{\n        iw = img.offsetWidth;\n        ih = img.offsetHeight;\n    }\n    return { iw, ih };\n};\n// 参数加工函数；\nMCanvas.prototype._handleOps = function(ops,img){\n    let cw = this.canvas.width,\n        ch = this.canvas.height;\n    let { iw, ih } = this._getSize(img);\n\n    // 图片宽高比；\n    let ratio = iw / ih;\n\n    // 根据参数计算后的绘制宽度；\n    let width =  this._get(cw,iw,ops.width,'pos');\n\n    // 裁剪的最大宽高；\n    let maxLsw,maxLsh;\n\n    // 裁剪参数；\n    let { x:cropx,y:cropy,width:cropw,height:croph } = ops.crop;\n    let crop = {};\n    crop.width = this._get(cw,iw,cropw,'crop');\n    crop.height = this._get(ch,ih,croph,'crop');\n    crop.x = this._get(iw,crop.width,cropx,'crop');\n    crop.y = this._get(ih,crop.height,cropy,'crop');\n\n    // 最大值判定；\n    if(crop.x > iw)crop.x = iw;\n    if(crop.y > ih)crop.y = ih;\n    maxLsw = iw - crop.x;\n    maxLsh = ih - crop.y;\n    if(crop.width > maxLsw)crop.width = maxLsw;\n    if(crop.height > maxLsh)crop.height = maxLsh;\n\n    // 位置参数；\n    let { x: px, y: py, rotate: pr, scale: ps } = ops.pos;\n    let pos = {\n        x:this._get(cw,width,px,'pos'),\n        y:this._get(ch,width/ratio,py,'pos'),\n        scale : ps,\n        rotate : parseFloat(pr) * Math.PI / 180,\n    };\n    return {width,crop,pos};\n};\n\n// --------------------------------------------------------\n// 绘制文字部分；\n// --------------------------------------------------------\nMCanvas.prototype.text = function(context = '', ops){\n    // 默认字体；\n    let fontFamily = `helvetica neue,hiragino sans gb,Microsoft YaHei,arial,tahoma,sans-serif`;\n    // 默认的字体大小;\n    let size = this.canvas.width / 20;\n\n    this.queue.push(()=>{\n        let defaultStyle = {\n            color:'#000',\n            type : 'fill',   // strokeText or fillText,\n            lineWidth : 1,\n            shadow:{\n                color: null,\n                blur: 0,\n                offsetX: 0,\n                offsetY: 0,\n            },\n        };\n        let option = {\n            width : 300,\n            align : 'left',\n            smallStyle:{\n                font : `${size * 0.8}px ${fontFamily}`,\n                lineHeight:size * 0.9,\n                ..._.deepCopy(defaultStyle),\n            },\n            normalStyle:{\n                font : `${size }px ${fontFamily}`,\n                lineHeight:size*1.1,\n                type : 'fill',   // strokeText or fillText,\n                ..._.deepCopy(defaultStyle),\n            },\n            largeStyle:{\n                font : `${size * 1.3}px ${fontFamily}`,\n                lineHeight:size * 1.4,\n                ..._.deepCopy(defaultStyle),\n            },\n            pos:{\n                x:0,\n                y:0,\n            },\n        };\n        option = _.extend(option,ops);\n\n        // 解析字符串模板后，调用字体绘制函数；\n        this._text(this._parse(context),option);\n        this._next();\n    });\n    return this;\n};\n// 字符串模板解析函数\n// 解析 <s></s> <b></b>\nMCanvas.prototype._parse = function(context){\n    let arr = context.split(/<s>|<b>/);\n    let result = [];\n    for(let i=0;i<arr.length;i++){\n        let value = arr[i];\n        if(/<\\/s>|<\\/b>/.test(value)){\n            let splitTag = /<\\/s>/.test(value) ? '</s>' : '</b>',\n                type     = /<\\/s>/.test(value) ? 'small' : 'large';\n            let tmp = arr[i].split(splitTag);\n            result.push({\n                type:type,\n                text:tmp[0],\n            });\n            tmp[1] && result.push({\n                type:'normal',\n                text:tmp[1],\n            });\n            continue;\n        }\n        arr[i] && result.push({\n            text:arr[i],\n            type:'normal',\n        });\n    }\n    return result;\n};\n\nMCanvas.prototype._text = function(textArr,option){\n    // 处理宽度参数；\n    option.width = this._get(this.canvas.width,0,option.width,'pos');\n\n    let style,line = 1,length = 0,\n        lineHeight = getLineHeight(textArr,option),\n        x = this._get(this.canvas.width,option.width,option.pos.x,'pos'),\n        y = (this._get(this.canvas.height,0,option.pos.y,'pos')) + lineHeight;\n\n    // data:字体数据；\n    // lineWidth:行宽；\n    this.data.text[line] = {\n        data:[],\n        lineWidth:0,\n    };\n\n    // 生成字体数据；\n    textArr.forEach(v =>{\n        style = option[`${v.type}Style`];\n        this.ctx.font = style.font;\n        let width = this.ctx.measureText(v.text).width;\n\n        // 处理 <br> 换行，先替换成 '|',便于单字绘图时进行判断；\n        let context = v.text.replace(/<br>/g,'|');\n\n        // 先进行多字超出判断，超出宽度后再进行单字超出判断；\n        if((length + width) > option.width || context.indexOf('|') !== -1){\n            for (let i=0,fontLength = context.length; i < fontLength; i++) {\n                let font = context[i];\n                width = this.ctx.measureText(font).width;\n\n                // 当字体的计算宽度 > 设置的宽度 || 内容中包含换行时,进入换行逻辑；\n                if((length + width) > option.width || font == '|'){\n                    length = 0;\n                    x = this._get(this.canvas.width,option.width,option.pos.x,'pos');\n                    y += lineHeight;\n                    line += 1;\n                    this.data.text[line] = {\n                        data:[],\n                        lineWidth:0,\n                    };\n                    if(font == '|')continue;\n                }\n                this.data.text[line]['data'].push({\n                    context:font,x,y,style,width,\n                });\n                length += width;\n                x += width;\n                this.data.text[line]['lineWidth'] = length;\n            }\n        }else{\n            this.data.text[line]['data'].push({\n                context,x,y,style,width,\n            });\n            length += width;\n            x += width;\n            this.data.text[line]['lineWidth'] = length;\n        }\n    });\n\n    // 通过字体数据进行文字的绘制；\n    _.forin(this.data.text,(k,v)=>{\n        // \b增加 align 的功能；\n        let add = 0;\n        if(v.lineWidth < option.width){\n            if(option.align == 'center'){\n                add = (option.width - v.lineWidth)/2;\n            }else if (option.align == 'right') {\n                add = option.width - v.lineWidth;\n            }\n        }\n        v.data.forEach(text=>{\n            text.x += add;\n            this._fillText(text);\n        });\n    });\n\n    // 获取行高；\n    function getLineHeight(textArr,option) {\n        let lh = 0,vlh;\n        textArr.forEach( v =>{\n            vlh = option[`${v.type}Style`].lineHeight;\n            if(vlh > lh)lh = vlh;\n        });\n        return lh;\n    }\n};\nMCanvas.prototype._fillText = function(text){\n    let {context, x, y, style} = text;\n    this.ctx.font = style.font;\n    this.ctx.textAlign = style.align;\n    this.ctx.textBaseline = 'alphabetic';\n    this.ctx.lineWidth = style.lineWidth;\n    this.ctx.shadowColor = style.shadow.color;\n    this.ctx.shadowBlur = style.shadow.blur;\n    this.ctx.shadowOffsetX = style.shadow.offsetX;\n    this.ctx.shadowOffsetY = style.shadow.offsetY;\n\n    if(style.gradient){\n        let { type, colorStop } = style.gradient;\n        let x1, y1, x2, y2;\n        if(type == 1){\n            x1 = x; y1 = y;\n            x2 = x + text.width; y2 = y ;\n        }else{\n            x1 = x; y1 = y - style.lineHeight;\n            x2 = x; y2 = y;\n        }\n        let grad  = this.ctx.createLinearGradient(x1,y1,x2,y2);\n        let colorNum = colorStop.length || 0;\n        _.forin(colorStop, (i, v)=>{\n            grad.addColorStop(1/colorNum*(+i+1),v);\n        });\n        this.ctx[`${style.type}Style`] = grad;\n    }else{\n        this.ctx[`${style.type}Style`] = style.color;\n    }\n\n    this.ctx[`${style.type}Text`](context,x,y);\n\n    this.ctx[`${style.type}Style`] = null;\n    this.ctx.lineWidth = 0;\n    this.ctx.shadowColor = null;\n    this.ctx.shadowBlur = 0;\n    this.ctx.shadowOffsetX = 0;\n    this.ctx.shadowOffsetY = 0;\n};\n\n// --------------------------------------------------------\n// 业务功能函数部分\n// --------------------------------------------------------\n\n// 参数加工函数；\n// 兼容 5 种 value 值：\n// x:250, x:'250px', x:'100%', x:'left:250',x:'center',\n// width:100,width:'100px',width:'100%'\nMCanvas.prototype._get = function(par,child,str,type){\n    let result = str;\n    if(typeof str === 'string'){\n        if(str.indexOf(':') !== -1 && type == 'pos'){\n            let arr = str.split(':');\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px',''));\n                    break;\n                case 'right':\n                case 'bottom':\n                    result = par - (+(arr[1].replace('px',''))) - child;\n                    break;\n                default:\n            }\n        }else if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''));\n        } else if (str.indexOf('%') !== -1) {\n            if(type == 'crop'){\n                result = child * (+str.replace('%', '')) / 100;\n            }else{\n                result = par * (+str.replace('%', '')) / 100;\n            }\n        }else if(str == 'center'){\n            result = (par-child)/2;\n        }else{\n            result = +str;\n        }\n    }\n    return Math.round(result);\n};\n\n// 绘制函数；\nMCanvas.prototype.draw = function(ops){\n    let _ops = {\n        type:'png',\n        quality:.9,\n        success(){},\n        error(){},\n    }, b64;\n    if(typeof ops == 'function'){\n        _ops.success = ops;\n    }else{\n        _ops = _.extend(_ops,ops);\n        if(_ops.type == 'jpg')_ops.type = 'jpeg';\n    }\n    this.fn.error = _ops.error;\n    this.fn.success = () => {\n        setTimeout(()=>{\n            b64 = this.canvas.toDataURL(`image/${_ops.type}`, _ops.quality);\n            _ops.success(b64);\n        },0);\n    };\n    this._next();\n    return this;\n};\nMCanvas.prototype._next = function(){\n    if(this.queue.length > 0){\n        this.queue.shift()();\n    }else{\n        this.fn.success();\n    }\n};\n\nMCanvas.prototype.clear = function(){\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    return this;\n};\n","export default {\n    extend(obj1, obj2) {\n        let type = this.isType(obj2);\n        if(type == 'object'){\n            this.forin(obj2, (k,v) => {\n                let vType = this.isType(v);\n                if (vType !== 'object' && vType !== 'array') {\n                    obj1[k] = v;\n                } else {\n                    if (this.isType(obj1[k]) !== vType || obj1[k] === null) {\n                        obj1[k] = vType == 'object' ? {} : [];\n                    }\n                    this.extend(obj1[k], v);\n                }\n            });\n        }else if(type == 'array'){\n            for (let i = 0; i < obj2.length; i++) {\n                obj1[i] = obj2[i];\n            }\n        }else{\n            obj1 = obj2;\n        }\n        return obj1;\n    },\n    loadImage(image, loaded, error) {\n        let img = new Image();\n        if(image.indexOf('http') == 0){\n            img.crossOrigin = '*';\n        }\n        img.onload = () => {\n            loaded(img);\n            setTimeout(()=>{\n                img = null;\n            },10);\n        };\n        img.onerror = () => {\n            error('img load error');\n        };\n        img.src = image;\n    },\n    isObject(tar){\n        return this.isObjFunc(tar, 'Object');\n    },\n    isBoolean(tar){\n        return this.isObjFunc(tar, 'Boolean');\n    },\n    isArr(tar){\n        return this.isObjFunc(tar, 'Array');\n    },\n    getImage(image,cbk, error){\n        if(typeof image == 'string'){\n                this.loadImage(image, img => {\n                    cbk(img);\n                },error);\n        }else if(typeof image == 'object'){\n            cbk(image);\n        }else{\n            console.log('add image error');\n            return;\n        }\n    },\n    forin(obj,cbk){\n        for(let k in obj){\n            if(obj.hasOwnProperty(k)){\n                cbk(k,obj[k]);\n            }\n        }\n    },\n    isIos8(){\n        let UA = window.navigator.userAgent.toLowerCase();\n        let IOS = /(iPhone|iPad|iPod|iOS)/gi.test(UA);\n        let IPAD = /(iPad)/gi.test(UA);\n        if(IOS){\n            return IPAD ? UA.match(/cpu os (\\d*)/)[1] < 9 : UA.match(/iphone os (\\d*)/)[1] < 9;\n        }else{\n            return false;\n        }\n    },\n    deepCopy(obj){\n        return JSON.parse(JSON.stringify(obj));\n    },\n    isObjFunc(tar, name) {\n        return Object.prototype.toString.call(tar) === '[object ' + name + ']';\n    },\n    isType(tar){\n        return Object.prototype.toString.call(tar).split(' ')[1].replace(']','').toLowerCase();\n    },\n};\n"],"names":["MCanvas","options","this","ops","_","extend","canvas","ctx","queue","fn","data","_init","obj1","obj2","type","isType","forin","k","v","vType","_this","i","length","image","loaded","error","img","Image","indexOf","crossOrigin","onload","onerror","src","tar","isObjFunc","cbk","loadImage","log","obj","hasOwnProperty","UA","window","navigator","userAgent","toLowerCase","IOS","test","IPAD","match","JSON","parse","stringify","name","Object","prototype","toString","call","split","replace","document","createElement","width","height","getContext","backgroundColor","setBgColor","background","bg","bgConfig","push","color","getImage","_background","fillStyle","fillRect","_getBgAlign","left","iw","cw","cropScale","rv","Math","abs","_getSize","ih","iRatio","cRatio","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","top","drawImage","_next","rect","fillColor","strokeColor","strokeWidth","_this2","ch","_get","x","y","lineWidth","strokeStyle","beginPath","strokeRect","closePath","circle","_this3","r","arc","PI","fill","stroke","watermark","pos","margin","position","add","def","isArr","forEach","_add","_this4","_handleOps","console","warn","cdx","cdy","cdw","cdh","crop","lsx","lsy","lsw","lsh","cratio","ldx","ldy","ldw","ldh","lcvs","lctx","_ratio","lctxScale","spaceX","spaceY","shrink","isIos8","round","map","translate","rotate","scale","tagName","naturalWidth","naturalHeight","offsetWidth","offsetHeight","ratio","maxLsw","maxLsh","cropx","cropy","cropw","croph","px","py","pr","ps","parseFloat","text","context","fontFamily","size","defaultStyle","option","deepCopy","_text","_this5","_parse","arr","result","value","splitTag","tmp","textArr","style","line","lineHeight","lh","vlh","font","_this6","measureText","fontLength","align","_fillText","textAlign","textBaseline","shadowColor","shadow","shadowBlur","blur","shadowOffsetX","offsetX","shadowOffsetY","offsetY","gradient","colorStop","x1","y1","x2","y2","grad","createLinearGradient","colorNum","addColorStop","par","child","str","draw","_ops","b64","success","_this7","toDataURL","quality","shift","clear","clearRect"],"mappings":"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"}