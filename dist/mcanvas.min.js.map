{"version":3,"file":"mcanvas.min.js","sources":["../src/index.js","../src/utils.js"],"sourcesContent":["import _ from './utils';\n\nexport default function MCanvas(cwidth,cheight){\n\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MCanvas))\n        return new MCanvas(cwidth,cheight);\n\n    // 配置canvas初始大小；\n    // cwidth：画布宽度，Number,选填，默认为 500;\n    // cheight: 画布高度，Number，选填，默认与宽度一致；\n    this.ops = {\n        width: cwidth || 500,\n        height:cheight || cwidth,\n    };\n    // 全局画布；\n    this.canvas = null;\n    this.ctx = null;\n\n    // 绘制函数队列；\n    this.queue = [];\n    // 最后执行的函数；\n    this.end = null;\n\n    // 文字绘制数据；\n    this.textData = {};\n\n    // 背景图数据;\n    this.bgConfig = null;\n\n    // 初始化创建画布；\n    this._init();\n}\n\nMCanvas.prototype._init = function(){\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.ops.width;\n    this.canvas.height = this.ops.height;\n    this.ctx = this.canvas.getContext('2d');\n};\n\n// --------------------------------------------------------\n// 绘制背景部分；\n// --------------------------------------------------------\n\nMCanvas.prototype.background = function(bg){\n    if(!bg && this.bgConfig)bg = this.bgConfig;\n    this.bgConfig = bg;\n    this.queue.push(() => {\n        if(bg.color){\n            this.ctx.fillStyle = bg.color;\n            this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);\n        }\n        if(bg.image){\n            _.getImage(bg.image, img =>{\n                this._background(img,bg);\n            });\n        }else{\n            console.error('background image error!');\n        }\n    });\n    return this;\n};\n\nMCanvas.prototype._background = function(img,bg){\n    // 图片与canvas的长宽比；\n    let iRatio = img.naturalWidth / img.naturalHeight;\n    let cRatio = this.canvas.width / this.canvas.height;\n    // 背景绘制参数；\n    let sx,sy,swidth,sheight,dx,dy,dwidth,dheight;\n    switch (bg.type) {\n        // 裁剪模式，固定canvas大小，原图铺满，超出的部分裁剪；\n        case 'crop':\n            sx = bg.left || 0;\n            sy = bg.top || 0;\n            if(iRatio > cRatio){\n                swidth = img.naturalHeight * cRatio;\n                sheight = img.naturalHeight;\n            }else{\n                swidth = img.naturalWidth;\n                sheight = swidth / cRatio;\n            }\n            dy = dx = 0;\n            dheight = this.canvas.height;\n            dwidth = this.canvas.width;\n            break;\n        // 包含模式，固定canvas大小，包含背景图；\n        case 'contain':\n            sy = sx = 0;\n            swidth = img.naturalWidth;\n            sheight = img.naturalHeight;\n            if(iRatio > cRatio){\n                dwidth = this.canvas.width;\n                dheight = dwidth / iRatio;\n                dx = bg.left || 0;\n                dy = (bg.top || bg.top == 0) ? bg.top : (this.canvas.height - dheight)/2;\n            }else{\n                dheight = this.canvas.height;\n                dwidth = dheight * iRatio;\n                dy = bg.top || 0;\n                dx = (bg.left || bg.left == 0) ? bg.left : (this.canvas.width - dwidth)/2;\n            }\n            break;\n        // 原图模式：canvas与原图大小一致，忽略初始化 传入的宽高参数；\n        // 同时，background 传入的 left/top 均被忽略；\n        case 'origin':\n            this.canvas.width = img.naturalWidth;\n            this.canvas.height = img.naturalHeight;\n            sx = sy = 0;\n            swidth = img.naturalWidth;\n            sheight = img.naturalHeight;\n            dx = dy = 0;\n            dwidth = this.canvas.width;\n            dheight = this.canvas.height;\n            break;\n        default:\n            console.error('background type error!');\n    }\n    this.ctx.drawImage(img,sx,sy,swidth,sheight,dx,dy,dwidth,dheight);\n    this._next();\n};\n// --------------------------------------------------------\n// 绘制图层部分；\n// --------------------------------------------------------\n\n// 绘制水印；基于 add 函数封装；\nMCanvas.prototype.watermark = function(image = '',ops){\n    if(!image){\n        console.log('there is not image of watermark');\n        return;\n    }\n    // 参数默认值；\n    let { width = '40%' , pos = 'rightbottom' , margin = 20} = ops;\n    let position = {\n        x:0,\n        y:0,\n        scale:1,\n        rotate:0,\n    };\n    switch (pos) {\n        case 'leftTop':\n            position.x = `left:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'leftBottom':\n            position.x = `left:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        case 'rightTop':\n            position.x = `right:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'rightBottom':\n            position.x = `right:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        default:\n    }\n    this.add(image,{\n        width,\n        pos:position,\n    });\n    return this;\n};\n\n// 通用绘制图层函数；\n// 使用方式：\n// 多张图: add([{image:'',options:{}},{image:'',options:{}}]);\n// 单张图: add(image,options);\nMCanvas.prototype.add = function(image = '',options){\n    // 默认参数；\n    let def = {\n        width:'100%',\n        crop:{\n            x:0,\n            y:0,\n            width:'100%',\n            height:'100%',\n        },\n        pos:{\n            x:0,\n            y:0,\n            scale:1,\n            rotate:0,\n        },\n    };\n\n    if(!_.isArr(image))image = [{image,options}];\n\n    image.forEach( v =>{\n        // 将封装好的 add函数 推入队列中待执行；\n        // 参数经过 _handleOps 加工；\n        this.queue.push(() => {\n            _.getImage(v.image, img => {\n                this._add(img,this._handleOps(_.extend(def,v.options),img));\n            });\n        });\n    });\n\n    return this;\n};\n\nMCanvas.prototype._add = function(img,ops){\n    let ratio = img.naturalWidth / img.naturalHeight;\n    // 画布canvas参数；\n    let cdx,cdy,cdw,cdh;\n    // 素材canvas参数；\n    let { x:lsx, y:lsy, width:lsw, height:lsh} = ops.crop;\n    let ldx,ldy,ldw,ldh;\n    // 素材canvas的绘制;\n    let lcvs = document.createElement('canvas');\n    let lctx = lcvs.getContext('2d');\n    // 图片宽高比 * 1.4 是一个最安全的宽度，旋转任意角度都不会被裁剪；\n    // 没有旋转却长宽比很高大的图，会导致放大倍数太大，因此甚至了最高倍数为5；\n    let lctxScale = ratio * 1.4 > 5 ? 5 : ratio * 1.4;\n    let spaceX,spaceY;\n\n    lcvs.width =  img.naturalWidth * lctxScale;\n    lcvs.height = img.naturalHeight * lctxScale;\n\n    // 从素材canvas的中心点开始绘制；\n    ldx = -img.naturalWidth/2;\n    ldy = -img.naturalHeight/2;\n    ldw = img.naturalWidth;\n    ldh = img.naturalHeight;\n\n    lctx.translate(lcvs.width/2,lcvs.height/2);\n    lctx.rotate(ops.pos.rotate);\n    lctx.drawImage(img,lsx,lsy,lsw,lsh,ldx,ldy,ldw,ldh);\n    //\n    // lcvs.style = 'width:300px';\n    // document.querySelector('body').appendChild(lcvs);\n\n    // 获取素材最终的宽高;\n    cdw = ops.width * lctxScale;\n    cdh = cdw/ ratio;\n\n    spaceX = (lctxScale - 1) * ops.width / 2;\n    spaceY = spaceX / ratio;\n\n    // 获取素材的位置；\n    //    配置的位置 - 缩放的影响 - 绘制成正方形的影响；\n    cdx = ops.pos.x + cdw * ( 1 - ops.pos.scale )/2 - spaceX;\n    cdy = ops.pos.y + cdh * ( 1 - ops.pos.scale )/2 - spaceY;\n\n    cdw *= ops.pos.scale;\n    cdh *= ops.pos.scale;\n\n    this.ctx.drawImage(lcvs,cdx,cdy,cdw,cdh);\n\n    lcvs = lctx = null;\n    this._next();\n};\n// 参数加工函数；\nMCanvas.prototype._handleOps = function(ops,img){\n    let cw = this.canvas.width,\n        ch = this.canvas.height,\n        iw = img.naturalWidth,\n        ih = img.naturalHeight;\n\n    // 图片宽高比；\n    let ratio = iw / ih;\n\n    // 根据参数计算后的绘制宽度；\n    let width =  this._get(cw,iw,ops.width,'pos');\n\n    // 裁剪的最大宽高；\n    let maxLsw,maxLsh;\n\n    // 裁剪参数；\n    let { x:cropx,y:cropy,width:cropw,height:croph } = ops.crop;\n    let crop = {\n        x: this._get(cw,iw,cropx,'crop'),\n        y: this._get(ch,ih,cropy,'crop'),\n        width:this._get(cw,iw,cropw,'crop'),\n        height:this._get(ch,ih,croph,'crop'),\n    };\n    // 最大值判定；\n    if(crop.x > iw)crop.x = iw;\n    if(crop.y > ih)crop.y = ih;\n    maxLsw = img.naturalWidth - crop.x;\n    maxLsh = img.naturalHeight - crop.y;\n    if(crop.width > maxLsw)crop.width = maxLsw;\n    if(crop.height > maxLsh)crop.height = maxLsh;\n\n    // 位置参数；\n    let { x: px, y: py, rotate: pr, scale: ps } = ops.pos;\n    let pos = {\n        x:this._get(cw,width,px,'pos'),\n        y:this._get(ch,width/ratio,py,'pos'),\n        scale : ps,\n        rotate : parseFloat(pr) * Math.PI / 180,\n    };\n    return {width,crop,pos};\n};\n\n// --------------------------------------------------------\n// 绘制文字部分；\n// --------------------------------------------------------\nMCanvas.prototype.text = function(context = '', ops){\n    // 默认字体；\n    let fontFamily = `helvetica neue,hiragino sans gb,Microsoft YaHei,arial,tahoma,sans-serif`;\n    // 默认的字体大小;\n    let size = this.canvas.width / 20;\n\n    this.queue.push(()=>{\n        let option = {\n            width : 300,\n            align : 'left',\n            smallStyle:{\n                font : `${size * 0.8}px ${fontFamily}`,\n                color:'#000',\n                lineheight:size * 0.9,\n            },\n            normalStyle:{\n                font : `${size }px ${fontFamily}`,\n                color:'#000',\n                lineheight:size*1.1,\n            },\n            largeStyle:{\n                font : `${size * 1.3}px ${fontFamily}`,\n                color:'#000',\n                lineheight:size * 1.4,\n            },\n            pos:{\n                x:0,\n                y:0,\n            },\n        };\n        option = _.extend(option,ops);\n\n        // 解析字符串模板后，调用字体绘制函数；\n        this._text(this._parse(context),option);\n        this._next();\n    });\n    return this;\n};\n// 字符串模板解析函数\n// 解析 <s></s> <b></b>\nMCanvas.prototype._parse = function(context){\n    let arr = context.split(/<s>|<b>/);\n    let result = [];\n    for(let i=0;i<arr.length;i++){\n        let value = arr[i];\n        if(/<\\/s>|<\\/b>/.test(value)){\n            let splitTag = /<\\/s>/.test(value) ? '</s>' : '</b>',\n                type     = /<\\/s>/.test(value) ? 'small' : 'large';\n            let tmp = arr[i].split(splitTag);\n            result.push({\n                type:type,\n                text:tmp[0],\n            });\n            tmp[1] && result.push({\n                type:'normal',\n                text:tmp[1],\n            });\n            continue;\n        }\n        arr[i] && result.push({\n            text:arr[i],\n            type:'normal',\n        });\n    }\n    return result;\n};\nMCanvas.prototype._text = function(textArr,option){\n    // 处理宽度参数；\n    option.width = this._get(this.canvas.width,0,option.width,'pos');\n\n    let style,line = 1,length = 0,\n        lineheight = getLineHeight(textArr,option),\n        x = this._get(this.canvas.width,option.width,option.pos.x,'pos'),\n        y = (this._get(this.canvas.height,0,option.pos.y,'pos')) + lineheight;\n\n    // data:字体数据；\n    // lineWidth:行宽；\n    this.textData[line] = {\n        data:[],\n        lineWidth:0,\n    };\n\n    // 生成字体数据；\n    textArr.forEach(v =>{\n        style = option[`${v.type}Style`];\n        this.ctx.font = style.font;\n        let width = this.ctx.measureText(v.text).width;\n\n        // 处理 <br> 换行，先替换成 '|',便于单字绘图时进行判断；\n        let context = v.text.replace(/<br>/g,'|');\n\n        // 先进行多字超出判断，超出宽度后再进行单字超出判断；\n        if((length + width) > option.width || context.indexOf('|') !== -1){\n            for (let i=0,fontLength = context.length; i < fontLength; i++) {\n                let font = context[i];\n                width = this.ctx.measureText(font).width;\n\n                // 当字体的计算宽度 > 设置的宽度 || 内容中包含换行时,进入换行逻辑；\n                if((length + width) > option.width || font == '|'){\n                    length = 0;\n                    x = this._get(this.canvas.width,option.width,option.pos.x,'pos');\n                    y += lineheight;\n                    line += 1;\n                    this.textData[line] = {\n                        data:[],\n                        lineWidth:0,\n                    };\n                    if(font == '|')continue;\n                }\n                this.textData[line]['data'].push({\n                    context:font,x,y,style,width,\n                });\n                length += width;\n                x += width;\n                this.textData[line]['lineWidth'] = length;\n            }\n        }else{\n            this.textData[line]['data'].push({\n                context,x,y,style,width,\n            });\n            length += width;\n            x += width;\n            this.textData[line]['lineWidth'] = length;\n        }\n    });\n\n    // 通过字体数据进行文字的绘制；\n    _.forin(this.textData,(k,v)=>{\n        // \b增加 align 的功能；\n        let add = 0;\n        if(v.lineWidth < option.width){\n            if(option.align == 'center'){\n                add = (option.width - v.lineWidth)/2;\n            }else if (option.align == 'right') {\n                add = option.width - v.lineWidth;\n            }\n        }\n        v.data.forEach(text=>{\n            text.x += add;\n            this._fillText(text);\n        });\n    });\n\n    // 获取行高；\n    function getLineHeight(textArr,option) {\n        let lh = 0,vlh;\n        textArr.forEach( v =>{\n            vlh = option[`${v.type}Style`].lineheight;\n            if(vlh > lh)lh = vlh;\n        });\n        return lh;\n    }\n};\nMCanvas.prototype._fillText = function(text){\n    let {context,x,y,style} = text;\n    this.ctx.font = style.font;\n    this.ctx.textAlign = style.align;\n    this.ctx.textBaseline = 'bottom';\n    this.ctx.fillStyle = style.color;\n    this.ctx.fillText(context,x,y);\n};\n\n// --------------------------------------------------------\n// 业务功能函数部分\n// --------------------------------------------------------\n\n// 参数加工函数；\n// 兼容 5 种 value 值：\n// x:250, x:'250px', x:'100%', x:'left:250',x:'center',\n// width:100,width:'100px',width:'100%'\nMCanvas.prototype._get = function(par,child,str,type){\n    let result = str;\n    if(typeof str === 'string'){\n        if(str.indexOf(':') !== -1 && type == 'pos'){\n            let arr = str.split(':');\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px',''));\n                    break;\n                case 'right':\n                case 'bottom':\n                    result = par - (+(arr[1].replace('px',''))) - child;\n                    break;\n                default:\n            }\n        }else if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''));\n        } else if (str.indexOf('%') !== -1) {\n            if(type == 'crop'){\n                result = child * (+str.replace('%', '')) / 100;\n            }else{\n                result = par * (+str.replace('%', '')) / 100;\n            }\n        }else if(str == 'center'){\n            result = (par-child)/2;\n        }else{\n            result = +str;\n        }\n    }\n    return result;\n};\n\n// 绘制函数；\nMCanvas.prototype.draw = function(fn = ()=>{}){\n    let b64;\n    this.end = () => {\n        setTimeout(()=>{\n            b64 = this.canvas.toDataURL('image/png');\n            fn(b64);\n        },0);\n    };\n    this._next();\n    return this;\n};\nMCanvas.prototype._next = function(){\n    if(this.queue.length > 0){\n        this.queue.shift()();\n    }else{\n        this.end();\n    }\n};\n","export default {\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if (typeof obj2[k] == 'object') {\n                    if (typeof obj1[k] !== 'object' || obj1[k] === null) {\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k], obj2[k]);\n                } else {\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    loadImage(image, loaded, error) {\n        let img = new Image();\n        if(image.indexOf('http') == 0){\n            img.crossOrigin = '*';\n        }\n        img.onload = () => {\n            loaded(img);\n        };\n        img.onerror = () => {\n            error('img load error');\n        };\n        img.src = image;\n    },\n    isArr(arr) {\n        return Object.prototype.toString.call(arr) === '[object Array]';\n    },\n    getImage(image,cbk){\n        if(typeof image == 'string'){\n                this.loadImage(image, img => {\n                    cbk(img);\n                },err=>{\n                    console.log(err);\n                });\n        }else if(typeof image == 'object'){\n            cbk(image);\n        }else{\n            console.log('add image error');\n            return;\n        }\n    },\n    forin(obj,cbk){\n        for(let k in obj){\n            if(obj.hasOwnProperty(k)){\n                cbk(k,obj[k]);\n            }\n        }\n    },\n};\n"],"names":["MCanvas","cwidth","cheight","this","ops","canvas","ctx","queue","end","textData","bgConfig","_init","obj1","obj2","k","hasOwnProperty","_typeof","extend","image","loaded","error","img","Image","indexOf","crossOrigin","onload","onerror","src","arr","Object","prototype","toString","call","cbk","loadImage","log","err","obj","document","createElement","width","height","getContext","background","bg","push","color","fillStyle","fillRect","_this","getImage","_background","iRatio","naturalWidth","naturalHeight","cRatio","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","type","left","top","drawImage","_next","watermark","pos","margin","position","x","y","add","options","def","_","isArr","forEach","v","_add","_this2","_handleOps","ratio","cdx","cdy","cdw","cdh","crop","lsx","lsy","lsw","lsh","ldx","ldy","ldw","ldh","lcvs","lctx","lctxScale","spaceX","spaceY","translate","rotate","scale","cw","ch","iw","ih","_get","maxLsw","maxLsh","cropx","cropy","cropw","croph","px","py","pr","ps","parseFloat","Math","PI","text","context","fontFamily","size","option","_text","_this3","_parse","split","result","i","length","value","test","splitTag","tmp","textArr","style","line","lineheight","lh","vlh","font","_this4","measureText","replace","fontLength","forin","lineWidth","align","data","_fillText","textAlign","textBaseline","fillText","par","child","str","draw","fn","b64","_this5","toDataURL","shift"],"mappings":"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"}