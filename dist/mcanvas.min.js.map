{"version":3,"file":"mcanvas.min.js","sources":["../src/index.js","../src/utils.js"],"sourcesContent":["import _ from './utils';\n\nexport default function MCanvas(cwidth,cheight,backgroundColor){\n\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MCanvas))\n        return new MCanvas(cwidth,cheight,backgroundColor);\n\n    // 配置canvas初始大小；\n    // cwidth：画布宽度，Number,选填，默认为 500;\n    // cheight: 画布高度，Number，选填，默认与宽度一致；\n    this.ops = {\n        width: cwidth || 500,\n        height:cheight || cwidth,\n        backgroundColor,\n    };\n    // 全局画布；\n    this.canvas = null;\n    this.ctx = null;\n\n    // 绘制函数队列；\n    this.queue = [];\n    // 最后执行的函数；\n    this.end = null;\n\n    // 文字绘制数据；\n    this.textData = {};\n\n    // 背景图数据;\n    this.bgConfig = null;\n\n    // 初始化创建画布；\n    this._init();\n}\n\nMCanvas.prototype._init = function(){\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.ops.width;\n    this.canvas.height = this.ops.height;\n    this.ctx = this.canvas.getContext('2d');\n    if(this.ops.backgroundColor){\n        this.ctx.fillStyle = this.ops.backgroundColor;\n        this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);\n    }\n};\n\n// --------------------------------------------------------\n// 绘制背景部分；\n// --------------------------------------------------------\n\nMCanvas.prototype.background = function(image,bg){\n    if(!bg && !image){\n        if(this.bgConfig){\n            bg = this.bgConfig;\n        }else{\n            console.error('mcanvas error : the init background must has the bg option params.');\n            return;\n        }\n    }else{\n        bg.image = image;\n        this.bgConfig = bg;\n    }\n    this.queue.push(() => {\n        if(bg.color){\n            this.ctx.fillStyle = bg.color;\n            this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);\n        }\n        if(bg.image){\n            _.getImage(bg.image, img =>{\n                this._background(img,bg);\n            });\n        }else{\n            console.error('mcanvas error : background image error!');\n        }\n    });\n    return this;\n};\n\nMCanvas.prototype._getBgAlign = function(left,iw,cw,cropScale){\n    let rv;\n    if(typeof left == 'string'){\n        if(left == '50%' || left == 'center'){\n            rv = Math.abs((iw - cw / cropScale) / 2);\n        }else if(left == '100%'){\n            rv = Math.abs(iw - cw / cropScale);\n        }else if(left == '0%'){\n            rv = 0;\n        }\n    }else if(typeof left == 'number'){\n        rv = left;\n    }else{\n        rv = 0;\n    }\n    return rv;\n};\nMCanvas.prototype._background = function(img,bg){\n    let {iw,ih} = this._getSize(img);\n    // 图片与canvas的长宽比；\n    let iRatio = iw / ih;\n    let cRatio = this.canvas.width / this.canvas.height;\n    // 背景绘制参数；\n    let sx,sy,swidth,sheight,dx,dy,dwidth,dheight;\n    let cropScale;\n    switch (bg.type) {\n        // 裁剪模式，固定canvas大小，原图铺满，超出的部分裁剪；\n        case 'crop':\n            if(iRatio > cRatio){\n                swidth = ih * cRatio;\n                sheight = ih;\n                cropScale = this.canvas.height / ih;\n            }else{\n                swidth = iw;\n                sheight = swidth / cRatio;\n                cropScale = this.canvas.width / iw;\n            }\n\n            sx = this._getBgAlign(bg.left,iw, this.canvas.width,cropScale);\n            sy = this._getBgAlign(bg.top,ih,this.canvas.height,cropScale);\n\n            dy = dx = 0;\n            dheight = this.canvas.height;\n            dwidth = this.canvas.width;\n            break;\n        // 包含模式，固定canvas大小，包含背景图；\n        case 'contain':\n            sy = sx = 0;\n            swidth = iw;\n            sheight = ih;\n            if(iRatio > cRatio){\n                dwidth = this.canvas.width;\n                dheight = dwidth / iRatio;\n                dx = bg.left || 0;\n                dy = (bg.top || bg.top == 0) ? bg.top : (this.canvas.height - dheight)/2;\n            }else{\n                dheight = this.canvas.height;\n                dwidth = dheight * iRatio;\n                dy = bg.top || 0;\n                dx = (bg.left || bg.left == 0) ? bg.left : (this.canvas.width - dwidth)/2;\n            }\n            break;\n        // 原图模式：canvas与原图大小一致，忽略初始化 传入的宽高参数；\n        // 同时，background 传入的 left/top 均被忽略；\n        case 'origin':\n            this.canvas.width = iw;\n            this.canvas.height = ih;\n            sx = sy = 0;\n            swidth = iw;\n            sheight = ih;\n            dx = dy = 0;\n            dwidth = this.canvas.width;\n            dheight = this.canvas.height;\n            break;\n        default:\n            console.error('mcanvas error:background type error!');\n    }\n    this.ctx.drawImage(img,sx,sy,swidth,sheight,dx,dy,dwidth,dheight);\n    this._next();\n};\n// --------------------------------------------------------\n// 绘制图层部分；\n// --------------------------------------------------------\n\n// 绘制水印；基于 add 函数封装；\nMCanvas.prototype.watermark = function(image = '',ops){\n    if(!image){\n        console.error('mcanvas error : there is not image of watermark.');\n        return;\n    }\n    // 参数默认值；\n    let { width = '40%' , pos = 'rightbottom' , margin = 20} = ops;\n    let position = {\n        x:0,\n        y:0,\n        scale:1,\n        rotate:0,\n    };\n    switch (pos) {\n        case 'leftTop':\n            position.x = `left:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'leftBottom':\n            position.x = `left:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        case 'rightTop':\n            position.x = `right:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'rightBottom':\n            position.x = `right:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        default:\n    }\n    this.add(image,{\n        width,\n        pos:position,\n    });\n    return this;\n};\n\n// 通用绘制图层函数；\n// 使用方式：\n// 多张图: add([{image:'',options:{}},{image:'',options:{}}]);\n// 单张图: add(image,options);\nMCanvas.prototype.add = function(image = '',options){\n    // 默认参数；\n    let def = {\n        width:'100%',\n        crop:{\n            x:0,\n            y:0,\n            width:'100%',\n            height:'100%',\n        },\n        pos:{\n            x:0,\n            y:0,\n            scale:1,\n            rotate:0,\n        },\n    };\n\n    if(!_.isArr(image))image = [{image,options}];\n\n    image.forEach( v =>{\n        // 将封装好的 add函数 推入队列中待执行；\n        // 参数经过 _handleOps 加工；\n        this.queue.push(() => {\n            _.getImage(v.image, img => {\n                this._add(img,this._handleOps(_.extend(def,v.options),img));\n            });\n        });\n    });\n\n    return this;\n};\n\nMCanvas.prototype._add = function(img,ops){\n    if(ops.width==0)console.warn(`mcanvas warn: the width of mc-element is zero`);\n    let {iw,ih} = this._getSize(img);\n    // let ratio = iw / ih;\n    // 画布canvas参数；\n    let cdx,cdy,cdw,cdh;\n    // 素材canvas参数；\n    let { x:lsx, y:lsy, width:lsw, height:lsh} = ops.crop;\n\n    let cratio = lsw / lsh;\n    let ldx,ldy,ldw,ldh;\n    // 素材canvas的绘制;\n    let lcvs = document.createElement('canvas');\n    let lctx = lcvs.getContext('2d');\n    // 图片宽高比 * 1.4 是一个最安全的宽度，旋转任意角度都不会被裁剪；\n    // 没有旋转却长宽比很高大的图，会导致放大倍数太大，因此甚至了最高倍数为5；\n    // _ratio 为 较大边 / 较小编 的比例；\n    let _ratio = iw > ih ? iw / ih : ih / iw;\n    let lctxScale = _ratio * 1.4 > 5 ? 5 : _ratio * 1.4;\n    let spaceX,spaceY;\n\n    lcvs.width =  lsw * lctxScale;\n    lcvs.height = lsh * lctxScale;\n\n    // 限制canvas的大小，ios8以下为 2096, 其余平台均限制为 4096;\n    let shrink;\n    if(_.isIos8() && (lcvs.width > 2096 || lcvs.height > 2096)){\n        if(cratio > 1){\n            shrink = 2096 / lcvs.width;\n        }else{\n            shrink = 2096 / lcvs.height;\n        }\n    }else if(lcvs.width > 4096 || lcvs.height > 4096){\n        if(cratio > 1){\n            shrink = 4096 / lcvs.width;\n        }else{\n            shrink = 4096 / lcvs.height;\n        }\n    }\n\n    // 从素材canvas的中心点开始绘制；\n    ldx = - Math.round(lsw / 2);\n    ldy = - Math.round(lsh / 2);\n    ldw = lsw;\n    ldh = Math.round(lsw / cratio);\n\n    // 获取素材最终的宽高;\n    if(shrink){\n        [lcvs.width,lcvs.height,ldx,ldy,ldw,ldh] = [lcvs.width,lcvs.height,ldx,ldy,ldw,ldh].map( v => Math.round(v*shrink));\n    }\n\n    lctx.translate(lcvs.width/2,lcvs.height/2);\n    lctx.rotate(ops.pos.rotate);\n\n    lctx.drawImage(img,lsx,lsy,lsw,lsh,ldx,ldy,ldw,ldh);\n\n    // lcvs.style.width = '300px';\n    // document.querySelector('body').appendChild(lcvs);\n\n    cdw = ops.width * lctxScale;\n    cdh = cdw / cratio;\n\n    spaceX = (lctxScale - 1) * ops.width / 2;\n    spaceY = spaceX / cratio;\n\n    // 获取素材的位置；\n    //    配置的位置 - 缩放的影响 - 绘制成正方形的影响；\n    cdx = ops.pos.x + cdw * ( 1 - ops.pos.scale )/2 - spaceX;\n    cdy = ops.pos.y + cdh * ( 1 - ops.pos.scale )/2 - spaceY;\n\n    cdw *= ops.pos.scale;\n    cdh *= ops.pos.scale;\n\n    this.ctx.drawImage(lcvs,cdx,cdy,cdw,cdh);\n\n    lcvs = lctx = null;\n    this._next();\n};\n\n// 获取宽高，兼容img，canvas\nMCanvas.prototype._getSize = function(img){\n    let iw,\n        ih;\n    if(img.tagName === 'IMG'){\n        iw = img.naturalWidth;\n        ih = img.naturalHeight;\n    }else if(img.tagName === 'CANVAS'){\n        iw = img.width;\n        ih = img.height;\n    }else{\n        iw = img.offsetWidth;\n        ih = img.offsetHeight;\n    }\n    return{iw,ih};\n};\n// 参数加工函数；\nMCanvas.prototype._handleOps = function(ops,img){\n    let cw = this.canvas.width,\n        ch = this.canvas.height;\n    let {iw,ih} = this._getSize(img);\n\n    // 图片宽高比；\n    let ratio = iw / ih;\n\n    // 根据参数计算后的绘制宽度；\n    let width =  this._get(cw,iw,ops.width,'pos');\n\n    // 裁剪的最大宽高；\n    let maxLsw,maxLsh;\n\n    // 裁剪参数；\n    let { x:cropx,y:cropy,width:cropw,height:croph } = ops.crop;\n    let crop = {};\n    crop.width = this._get(cw,iw,cropw,'crop');\n    crop.height = this._get(ch,ih,croph,'crop');\n    crop.x = this._get(iw,crop.width,cropx,'crop');\n    crop.y = this._get(ih,crop.height,cropy,'crop');\n\n    // 最大值判定；\n    if(crop.x > iw)crop.x = iw;\n    if(crop.y > ih)crop.y = ih;\n    maxLsw = iw - crop.x;\n    maxLsh = ih - crop.y;\n    if(crop.width > maxLsw)crop.width = maxLsw;\n    if(crop.height > maxLsh)crop.height = maxLsh;\n\n    // 位置参数；\n    let { x: px, y: py, rotate: pr, scale: ps } = ops.pos;\n    let pos = {\n        x:this._get(cw,width,px,'pos'),\n        y:this._get(ch,width/ratio,py,'pos'),\n        scale : ps,\n        rotate : parseFloat(pr) * Math.PI / 180,\n    };\n    return {width,crop,pos};\n};\n\n// --------------------------------------------------------\n// 绘制文字部分；\n// --------------------------------------------------------\nMCanvas.prototype.text = function(context = '', ops){\n    // 默认字体；\n    let fontFamily = `helvetica neue,hiragino sans gb,Microsoft YaHei,arial,tahoma,sans-serif`;\n    // 默认的字体大小;\n    let size = this.canvas.width / 20;\n\n    this.queue.push(()=>{\n        let option = {\n            width : 300,\n            align : 'left',\n            smallStyle:{\n                font : `${size * 0.8}px ${fontFamily}`,\n                color:'#000',\n                lineheight:size * 0.9,\n            },\n            normalStyle:{\n                font : `${size }px ${fontFamily}`,\n                color:'#000',\n                lineheight:size*1.1,\n            },\n            largeStyle:{\n                font : `${size * 1.3}px ${fontFamily}`,\n                color:'#000',\n                lineheight:size * 1.4,\n            },\n            pos:{\n                x:0,\n                y:0,\n            },\n        };\n        option = _.extend(option,ops);\n\n        // 解析字符串模板后，调用字体绘制函数；\n        this._text(this._parse(context),option);\n        this._next();\n    });\n    return this;\n};\n// 字符串模板解析函数\n// 解析 <s></s> <b></b>\nMCanvas.prototype._parse = function(context){\n    let arr = context.split(/<s>|<b>/);\n    let result = [];\n    for(let i=0;i<arr.length;i++){\n        let value = arr[i];\n        if(/<\\/s>|<\\/b>/.test(value)){\n            let splitTag = /<\\/s>/.test(value) ? '</s>' : '</b>',\n                type     = /<\\/s>/.test(value) ? 'small' : 'large';\n            let tmp = arr[i].split(splitTag);\n            result.push({\n                type:type,\n                text:tmp[0],\n            });\n            tmp[1] && result.push({\n                type:'normal',\n                text:tmp[1],\n            });\n            continue;\n        }\n        arr[i] && result.push({\n            text:arr[i],\n            type:'normal',\n        });\n    }\n    return result;\n};\n\nMCanvas.prototype._text = function(textArr,option){\n    // 处理宽度参数；\n    option.width = this._get(this.canvas.width,0,option.width,'pos');\n\n    let style,line = 1,length = 0,\n        lineheight = getLineHeight(textArr,option),\n        x = this._get(this.canvas.width,option.width,option.pos.x,'pos'),\n        y = (this._get(this.canvas.height,0,option.pos.y,'pos')) + lineheight;\n\n    // data:字体数据；\n    // lineWidth:行宽；\n    this.textData[line] = {\n        data:[],\n        lineWidth:0,\n    };\n\n    // 生成字体数据；\n    textArr.forEach(v =>{\n        style = option[`${v.type}Style`];\n        this.ctx.font = style.font;\n        let width = this.ctx.measureText(v.text).width;\n\n        // 处理 <br> 换行，先替换成 '|',便于单字绘图时进行判断；\n        let context = v.text.replace(/<br>/g,'|');\n\n        // 先进行多字超出判断，超出宽度后再进行单字超出判断；\n        if((length + width) > option.width || context.indexOf('|') !== -1){\n            for (let i=0,fontLength = context.length; i < fontLength; i++) {\n                let font = context[i];\n                width = this.ctx.measureText(font).width;\n\n                // 当字体的计算宽度 > 设置的宽度 || 内容中包含换行时,进入换行逻辑；\n                if((length + width) > option.width || font == '|'){\n                    length = 0;\n                    x = this._get(this.canvas.width,option.width,option.pos.x,'pos');\n                    y += lineheight;\n                    line += 1;\n                    this.textData[line] = {\n                        data:[],\n                        lineWidth:0,\n                    };\n                    if(font == '|')continue;\n                }\n                this.textData[line]['data'].push({\n                    context:font,x,y,style,width,\n                });\n                length += width;\n                x += width;\n                this.textData[line]['lineWidth'] = length;\n            }\n        }else{\n            this.textData[line]['data'].push({\n                context,x,y,style,width,\n            });\n            length += width;\n            x += width;\n            this.textData[line]['lineWidth'] = length;\n        }\n    });\n\n    // 通过字体数据进行文字的绘制；\n    _.forin(this.textData,(k,v)=>{\n        // \b增加 align 的功能；\n        let add = 0;\n        if(v.lineWidth < option.width){\n            if(option.align == 'center'){\n                add = (option.width - v.lineWidth)/2;\n            }else if (option.align == 'right') {\n                add = option.width - v.lineWidth;\n            }\n        }\n        v.data.forEach(text=>{\n            text.x += add;\n            this._fillText(text);\n        });\n    });\n\n    // 获取行高；\n    function getLineHeight(textArr,option) {\n        let lh = 0,vlh;\n        textArr.forEach( v =>{\n            vlh = option[`${v.type}Style`].lineheight;\n            if(vlh > lh)lh = vlh;\n        });\n        return lh;\n    }\n};\nMCanvas.prototype._fillText = function(text){\n    let {context,x,y,style} = text;\n    this.ctx.font = style.font;\n    this.ctx.textAlign = style.align;\n    this.ctx.textBaseline = 'bottom';\n    this.ctx.fillStyle = style.color;\n    this.ctx.fillText(context,x,y);\n};\n\n// --------------------------------------------------------\n// 业务功能函数部分\n// --------------------------------------------------------\n\n// 参数加工函数；\n// 兼容 5 种 value 值：\n// x:250, x:'250px', x:'100%', x:'left:250',x:'center',\n// width:100,width:'100px',width:'100%'\nMCanvas.prototype._get = function(par,child,str,type){\n    let result = str;\n    if(typeof str === 'string'){\n        if(str.indexOf(':') !== -1 && type == 'pos'){\n            let arr = str.split(':');\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px',''));\n                    break;\n                case 'right':\n                case 'bottom':\n                    result = par - (+(arr[1].replace('px',''))) - child;\n                    break;\n                default:\n            }\n        }else if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''));\n        } else if (str.indexOf('%') !== -1) {\n            if(type == 'crop'){\n                result = child * (+str.replace('%', '')) / 100;\n            }else{\n                result = par * (+str.replace('%', '')) / 100;\n            }\n        }else if(str == 'center'){\n            result = (par-child)/2;\n        }else{\n            result = +str;\n        }\n    }\n    return Math.round(result);\n};\n\n// 绘制函数；\nMCanvas.prototype.draw = function(ops){\n    let b64;\n    let _ops = {\n        type:'png',\n        quality:.9,\n        callback(){},\n    };\n    if(typeof ops == 'function'){\n        _ops.callback = ops;\n    }else{\n        _ops = _.extend(_ops,ops);\n        if(_ops.type == 'jpg')_ops.type = 'jpeg';\n    }\n    this.end = () => {\n        setTimeout(()=>{\n            b64 = this.canvas.toDataURL(`image/${_ops.type}`, _ops.quality);\n            _ops.callback(b64);\n        },0);\n    };\n    this._next();\n    return this;\n};\nMCanvas.prototype._next = function(){\n    if(this.queue.length > 0){\n        this.queue.shift()();\n    }else{\n        this.end();\n    }\n};\n\nMCanvas.prototype.clear = function(){\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    return this;\n};\n","export default {\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if (typeof obj2[k] == 'object') {\n                    if (typeof obj1[k] !== 'object' || obj1[k] === null) {\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k], obj2[k]);\n                } else {\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    loadImage(image, loaded, error) {\n        let img = new Image();\n        if(image.indexOf('http') == 0){\n            img.crossOrigin = '*';\n        }\n        img.onload = () => {\n            loaded(img);\n        };\n        img.onerror = () => {\n            error('img load error');\n        };\n        img.src = image;\n    },\n    isArr(arr) {\n        return Object.prototype.toString.call(arr) === '[object Array]';\n    },\n    getImage(image,cbk){\n        if(typeof image == 'string'){\n                this.loadImage(image, img => {\n                    cbk(img);\n                },err=>{\n                    console.log(err);\n                });\n        }else if(typeof image == 'object'){\n            cbk(image);\n        }else{\n            console.log('add image error');\n            return;\n        }\n    },\n    forin(obj,cbk){\n        for(let k in obj){\n            if(obj.hasOwnProperty(k)){\n                cbk(k,obj[k]);\n            }\n        }\n    },\n    isIos8(){\n        let UA = window.navigator.userAgent.toLowerCase();\n        let IOS = /(iPhone|iPad|iPod|iOS)/gi.test(UA);\n        let IPAD = /(iPad)/gi.test(UA);\n        if(IOS){\n            return IPAD ? UA.match(/cpu os (\\d*)/)[1] < 9 : UA.match(/iphone os (\\d*)/)[1] < 9;\n        }else{\n            return false;\n        }\n    },\n};\n"],"names":["MCanvas","cwidth","cheight","backgroundColor","this","ops","canvas","ctx","queue","end","textData","bgConfig","_init","obj1","obj2","k","hasOwnProperty","_typeof","extend","image","loaded","error","img","Image","indexOf","crossOrigin","onload","onerror","src","arr","Object","prototype","toString","call","cbk","loadImage","log","err","obj","UA","window","navigator","userAgent","toLowerCase","IOS","test","IPAD","match","document","createElement","width","height","getContext","fillStyle","fillRect","background","bg","push","color","_this","getImage","_background","_getBgAlign","left","iw","cw","cropScale","rv","Math","abs","_getSize","ih","iRatio","cRatio","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","type","top","drawImage","_next","watermark","pos","margin","position","x","y","add","options","def","_","isArr","forEach","v","_add","_this2","_handleOps","console","warn","cdx","cdy","cdw","cdh","crop","lsx","lsy","lsw","lsh","cratio","ldx","ldy","ldw","ldh","lcvs","lctx","_ratio","lctxScale","spaceX","spaceY","shrink","isIos8","round","map","translate","rotate","scale","tagName","naturalWidth","naturalHeight","offsetWidth","offsetHeight","ch","ratio","_get","maxLsw","maxLsh","cropx","cropy","cropw","croph","px","py","pr","ps","parseFloat","PI","text","context","fontFamily","size","option","_text","_this3","_parse","split","result","i","length","value","splitTag","tmp","textArr","style","line","lineheight","lh","vlh","font","_this4","measureText","replace","fontLength","forin","lineWidth","align","data","_fillText","textAlign","textBaseline","fillText","par","child","str","draw","b64","_ops","callback","_this5","toDataURL","quality","shift","clear","clearRect"],"mappings":"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"}